/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AscensionStakingFacet,
  AscensionStakingFacetInterface,
} from "../AscensionStakingFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "RewardTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506116ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80628cc262146100d457806316c38b3c146100fa57806318160ddd1461010f5780631c1f78eb14610117578063293be4561461011f5780632e1a7d4d146101325780633d18b9121461014557806370a082311461014d57806380faa57d146101605780638980f11f146101685780638aee81271461017b578063a694fc3a1461018e578063cc1a378f146101a1578063cd3daf9d146101b4578063e9fad8ee146101bc578063f7c618c1146101c4575b600080fd5b6100e76100e236600461142f565b6101d9565b6040519081526020015b60405180910390f35b61010d610108366004611458565b61026d565b005b6100e761029d565b6100e76102b2565b61010d61012d366004611475565b6102d9565b61010d610140366004611475565b6105b0565b61010d61081b565b6100e761015b36600461142f565b61095d565b6100e761098a565b61010d61017636600461148e565b6109b3565b61010d61018936600461142f565b610ae1565b61010d61019c366004611475565b610c6f565b61010d6101af366004611475565b610f1e565b6100e7610ff1565b61010d61106a565b6101cc61109d565b6040516100f191906114b8565b6000806101e46110b8565b6001600160a01b0384166000908152600982016020908152604080832054600885019092529091205491925090670de0b6b3a764000090610223610ff1565b61022d91906114e2565b6001600160a01b0386166000908152600a8501602052604090205461025291906114f9565b61025c9190611518565b610266919061153a565b9392505050565b6102756110dc565b600061027f6110b8565b8054921515600160a01b0260ff60a01b199093169290921790915550565b6000806102a86110b8565b6007015492915050565b6000806102bd6110b8565b9050806005015481600101546102d391906114f9565b91505090565b6102e16110dc565b6000806102ec6110b8565b90506102f6610ff1565b600382015561030361098a565b60028201556001600160a01b0382161561035257610320826101d9565b6001600160a01b0383166000908152600983016020908152604080832093909355600384015460088501909152919020555b600061035c6110b8565b9050806004015442106103825760058101546103789085611518565b60018201556103cc565b600042826004015461039491906114e2565b905060008260010154826103a891906114f9565b60058401549091506103ba828861153a565b6103c49190611518565b600184015550505b6000805482546001600160a01b039081169116146104685781546040516370a0823160e01b81526001600160a01b03909116906370a08231906104139030906004016114b8565b60206040518083038186803b15801561042b57600080fd5b505afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611552565b6104f6565b600782015482546040516370a0823160e01b81526001600160a01b03909116906370a082319061049c9030906004016114b8565b60206040518083038186803b1580156104b457600080fd5b505afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190611552565b6104f691906114e2565b90508160050154816105089190611518565b8260010154111561055b5760405162461bcd60e51b81526020600482015260186024820152770a0e4deecd2c8cac840e4caeec2e4c840e8dede40d0d2ced60431b60448201526064015b60405180910390fd5b426002830181905560058301546105719161153a565b60048301556040518581527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a15050505050565b60006105ba6110b8565b90506002816006015414156105e15760405162461bcd60e51b81526004016105529061156b565b600260068201553360006105f36110b8565b90506105fd610ff1565b600382015561060a61098a565b60028201556001600160a01b0382161561065957610627826101d9565b6001600160a01b0383166000908152600983016020908152604080832093909355600384015460088501909152919020555b60006106636110b8565b9050600085116106a95760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610552565b848160070160008282546106bd91906114e2565b9091555050336000908152600a82016020526040812080548792906106e39084906114e2565b909155505060005460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061071a90339089906004016115a2565b602060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076c91906115bb565b50600154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061079f90339089906004016115a2565b600060405180830381600087803b1580156107b957600080fd5b505af11580156107cd573d6000803e3d6000fd5b50506040518781523392507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591506020015b60405180910390a2505050610812600190565b60069091015550565b60006108256110b8565b905060028160060154141561084c5760405162461bcd60e51b81526004016105529061156b565b6002600682015533600061085e6110b8565b9050610868610ff1565b600382015561087561098a565b60028201556001600160a01b038216156108c457610892826101d9565b6001600160a01b0383166000908152600983016020908152604080832093909355600384015460088501909152919020555b60006108ce6110b8565b3360009081526009820160205260409020549091508015610949573360008181526009840160205260408120558254610913916001600160a01b039091169083611165565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50505050610955600190565b600690910155565b6000806109686110b8565b6001600160a01b039093166000908152600a9093016020525050604090205490565b6000806109956110b8565b9050806004015442106109ac5780600401546102d3565b4291505090565b6109bb6110dc565b6000546001600160a01b0383811691161415610a235760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b6064820152608401610552565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90610a5190339085906004016115a2565b602060405180830381600087803b158015610a6b57600080fd5b505af1158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa391906115bb565b507f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610ad59291906115a2565b60405180910390a15050565b610ae96110dc565b6000610af36110b8565b6001549091506001600160a01b0383811691161415610b545760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207374616b6520746865207374616b696e6720746f6b656e21006044820152606401610552565b6001600160a01b038216610b9a5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610552565b80600401544211610c265760405162461bcd60e51b815260206004820152605c602482015260008051602061165883398151915260448201527f636f6d706c657465206265666f7265206368616e67696e67207468652072657760648201527b185c99081d1bdad95b88199bdc881d1a19481b995dc81c195c9a5bd960221b608482015260a401610552565b80546001600160a01b0319166001600160a01b03831690811782556040517fa5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a091610ad5916114b8565b6000610c796110b8565b9050600281600601541415610ca05760405162461bcd60e51b81526004016105529061156b565b60026006820155336000610cb26110b8565b9050610cbc610ff1565b6003820155610cc961098a565b60028201556001600160a01b03821615610d1857610ce6826101d9565b6001600160a01b0383166000908152600983016020908152604080832093909355600384015460088501909152919020555b6000610d226110b8565b905060008511610d655760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610552565b8054600160a01b900460ff1615610dbe5760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c65640000006044820152606401610552565b84816007016000828254610dd2919061153a565b9091555050336000908152600a8201602052604081208054879290610df890849061153a565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610e4f57600080fd5b505af1158015610e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8791906115bb565b506001546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610eba90339089906004016115a2565b600060405180830381600087803b158015610ed457600080fd5b505af1158015610ee8573d6000803e3d6000fd5b50506040518781523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d91506020016107ff565b610f266110dc565b6000610f306110b8565b905080600401544211610fba5760405162461bcd60e51b8152602060048201526058602482015260008051602061165883398151915260448201527f636f6d706c657465206265666f7265206368616e67696e672074686520647572606482015277185d1a5bdb88199bdc881d1a19481b995dc81c195c9a5bd960421b608482015260a401610552565b600581018290556040518281527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d390602001610ad5565b600080610ffc6110b8565b90508060070154600014156110145760030154919050565b80600701548160010154826002015461102b61098a565b61103591906114e2565b61103f91906114f9565b61105190670de0b6b3a76400006114f9565b61105b9190611518565b81600301546102d3919061153a565b60006110746110b8565b336000908152600a82016020526040902054909150611092906105b0565b61109a61081b565b50565b6000806110a86110b8565b546001600160a01b031692915050565b7f99d1809423348f96b870b62ba64fabb4b02fb49a225e853c594bceb171c5b87f90565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146111635760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610552565b565b6111bb8363a9059cbb60e01b84846040516024016111849291906115a2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111c0565b505050565b6000611215826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112929092919063ffffffff16565b8051909150156111bb578080602001905181019061123391906115bb565b6111bb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610552565b60606112a184846000856112a9565b949350505050565b60608247101561130a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610552565b6001600160a01b0385163b6113615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610552565b600080866001600160a01b0316858760405161137d9190611608565b60006040518083038185875af1925050503d80600081146113ba576040519150601f19603f3d011682016040523d82523d6000602084013e6113bf565b606091505b50915091506113cf8282866113da565b979650505050505050565b606083156113e9575081610266565b8251156113f95782518084602001fd5b8160405162461bcd60e51b81526004016105529190611624565b80356001600160a01b038116811461142a57600080fd5b919050565b60006020828403121561144157600080fd5b61026682611413565b801515811461109a57600080fd5b60006020828403121561146a57600080fd5b81356102668161144a565b60006020828403121561148757600080fd5b5035919050565b600080604083850312156114a157600080fd5b6114aa83611413565b946020939093013593505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b6000828210156114f4576114f46114cc565b500390565b6000816000190483118215151615611513576115136114cc565b500290565b60008261153557634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561154d5761154d6114cc565b500190565b60006020828403121561156457600080fd5b5051919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b03929092168252602082015260400190565b6000602082840312156115cd57600080fd5b81516102668161144a565b60005b838110156115f35781810151838201526020016115db565b83811115611602576000848401525b50505050565b6000825161161a8184602087016115d8565b9190910192915050565b60208152600082518060208401526116438160408501602087016115d8565b601f01601f1916919091016040019291505056fe50726576696f7573207265776172647320706572696f64206d75737420626520a26469706673582212208361321c29b98f96da071372a0679cb7cf8355cc11674217f566e4f4b0b9ab8464736f6c63430008090033";

export class AscensionStakingFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AscensionStakingFacet> {
    return super.deploy(overrides || {}) as Promise<AscensionStakingFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AscensionStakingFacet {
    return super.attach(address) as AscensionStakingFacet;
  }
  connect(signer: Signer): AscensionStakingFacet__factory {
    return super.connect(signer) as AscensionStakingFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AscensionStakingFacetInterface {
    return new utils.Interface(_abi) as AscensionStakingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AscensionStakingFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AscensionStakingFacet;
  }
}
