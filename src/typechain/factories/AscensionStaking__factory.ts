/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AscensionStaking,
  AscensionStakingInterface,
} from "../AscensionStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sToken",
    outputs: [
      {
        internalType: "contract AscensionStakedToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526301e1338060075534801561001857600080fd5b50604051620014d2380380620014d2833981016040819052610039916100c9565b6100423361005d565b600180556001600160a01b039182166080521660a0526100fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100c457600080fd5b919050565b600080604083850312156100dc57600080fd5b6100e5836100ad565b91506100f3602084016100ad565b90509250929050565b60805160a05161137f620001536000396000818161029c015281816108210152610e370152600081816103270152818161051a015281816107800152818161098201528181610ad00152610d9b015261137f6000f3fe608060405234801561001057600080fd5b50600436106101485760003560e01c80628cc2621461014d5780630700037d1461017357806316c38b3c146101935780631c1f78eb146101a8578063293be456146101b05780632e1a7d4d146101c3578063386a9525146101d65780633d18b912146101df5780635c975abb146101e757806370a0823114610204578063715018a61461022d5780637b0a47ee1461023557806380faa57d1461023e578063817b1cd2146102465780638980f11f1461024f5780638b876347146102625780638da5cb5b146102825780639ebdf12c14610297578063a694fc3a146102be578063c8f33c91146102d1578063cc1a378f146102da578063cd3daf9d146102ed578063df136d65146102f5578063e9fad8ee146102fe578063ebe2b12b14610306578063f2fde38b1461030f578063fc0c546a14610322575b600080fd5b61016061015b366004611164565b610349565b6040519081526020015b60405180910390f35b610160610181366004611164565b600a6020526000908152604090205481565b6101a66101a1366004611194565b6103c6565b005b610160610411565b6101a66101be3660046111b1565b610428565b6101a66101d13660046111b1565b610667565b61016060075481565b6101a66108c8565b6002546101f49060ff1681565b604051901515815260200161016a565b610160610212366004611164565b6001600160a01b03166000908152600b602052604090205490565b6101a6610a4d565b61016060035481565b610160610a88565b61016060085481565b6101a661025d3660046111ca565b610a9f565b610160610270366004611164565b60096020526000908152604090205481565b61028a610c18565b60405161016a91906111f4565b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6101a66102cc3660046111b1565b610c27565b61016060045481565b6101a66102e83660046111b1565b610ed2565b610160610fd4565b61016060055481565b6101a6611037565b61016060065481565b6101a661031d366004611164565b611058565b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0381166000908152600a60209081526040808320546009909252822054670de0b6b3a76400009061037f610fd4565b610389919061121e565b6001600160a01b0385166000908152600b60205260409020546103ac9190611235565b6103b69190611254565b6103c09190611276565b92915050565b336103cf610c18565b6001600160a01b0316146103fe5760405162461bcd60e51b81526004016103f59061128e565b60405180910390fd5b6002805460ff1916911515919091179055565b60006007546003546104239190611235565b905090565b33610431610c18565b6001600160a01b0316146104575760405162461bcd60e51b81526004016103f59061128e565b6000610461610fd4565b60055561046c610a88565b6004556001600160a01b038116156104b35761048781610349565b6001600160a01b0382166000908152600a60209081526040808320939093556005546009909152919020555b60065442106104d1576007546104c99083611254565b600355610513565b6000426006546104e1919061121e565b90506000600354826104f39190611235565b6007549091506105038286611276565b61050d9190611254565b60035550505b60006008547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161056491906111f4565b60206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b491906112c3565b6105be919061121e565b9050600754816105ce9190611254565b600354111561061a5760405162461bcd60e51b81526020600482015260186024820152770a0e4deecd2c8cac840e4caeec2e4c840e8dede40d0d2ced60431b60448201526064016103f5565b42600481905560075461062c91611276565b6006556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b6002600154141561068a5760405162461bcd60e51b81526004016103f5906112dc565b600260015533610698610fd4565b6005556106a3610a88565b6004556001600160a01b038116156106ea576106be81610349565b6001600160a01b0382166000908152600a60209081526040808320939093556005546009909152919020555b6000821161072e5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064016103f5565b8160086000828254610740919061121e565b9091555050336000908152600b60205260408120805484929061076490849061121e565b909155505060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906107b79033908690600401611313565b602060405180830381600087803b1580156107d157600080fd5b505af11580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610809919061132c565b50604051632770a7eb60e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac906108589033908690600401611313565b600060405180830381600087803b15801561087257600080fd5b505af1158015610886573d6000803e3d6000fd5b50506040518481523392507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591506020015b60405180910390a2505060018055565b600260015414156108eb5760405162461bcd60e51b81526004016103f5906112dc565b6002600155336108f9610fd4565b600555610904610a88565b6004556001600160a01b0381161561094b5761091f81610349565b6001600160a01b0382166000908152600a60209081526040808320939093556005546009909152919020555b336000908152600a60205260409020548015610a4557336000818152600a6020526040808220919091555163a9059cbb60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163a9059cbb916109c091908590600401611313565b602060405180830381600087803b1580156109da57600080fd5b505af11580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a12919061132c565b5060405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020016108b8565b505060018055565b33610a56610c18565b6001600160a01b031614610a7c5760405162461bcd60e51b81526004016103f59061128e565b610a8660006110f8565b565b60006006544210610a9a575060065490565b504290565b33610aa8610c18565b6001600160a01b031614610ace5760405162461bcd60e51b81526004016103f59061128e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610b5a5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b60648201526084016103f5565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90610b889033908590600401611313565b602060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bda919061132c565b507f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610c0c929190611313565b60405180910390a15050565b6000546001600160a01b031690565b60026001541415610c4a5760405162461bcd60e51b81526004016103f5906112dc565b600260015533610c58610fd4565b600555610c63610a88565b6004556001600160a01b03811615610caa57610c7e81610349565b6001600160a01b0382166000908152600a60209081526040808320939093556005546009909152919020555b60008211610ceb5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016103f5565b60025460ff1615610d3e5760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e672069732063757272656e746c792064697361626c656400000060448201526064016103f5565b8160086000828254610d509190611276565b9091555050336000908152600b602052604081208054849290610d74908490611276565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610de757600080fd5b505af1158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f919061132c565b506040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990610e6e9033908690600401611313565b600060405180830381600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b50506040518481523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d91506020016108b8565b33610edb610c18565b6001600160a01b031614610f015760405162461bcd60e51b81526004016103f59061128e565b6006544211610f995760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e672074686520647572606482015277185d1a5bdb88199bdc881d1a19481b995dc81c195c9a5bd960421b608482015260a4016103f5565b60078190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39060200160405180910390a150565b600060085460001415610fe8575060055490565b600854670de0b6b3a7640000600354600454611002610a88565b61100c919061121e565b6110169190611235565b6110209190611235565b61102a9190611254565b6005546104239190611276565b336000908152600b602052604090205461105090610667565b610a866108c8565b33611061610c18565b6001600160a01b0316146110875760405162461bcd60e51b81526004016103f59061128e565b6001600160a01b0381166110ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f5565b6110f5816110f8565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461115f57600080fd5b919050565b60006020828403121561117657600080fd5b61117f82611148565b9392505050565b80151581146110f557600080fd5b6000602082840312156111a657600080fd5b813561117f81611186565b6000602082840312156111c357600080fd5b5035919050565b600080604083850312156111dd57600080fd5b6111e683611148565b946020939093013593505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008282101561123057611230611208565b500390565b600081600019048311821515161561124f5761124f611208565b500290565b60008261127157634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561128957611289611208565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112d557600080fd5b5051919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561133e57600080fd5b815161117f8161118656fea26469706673582212207a992c86332e8451c3ab27dc60e85017021f54b939ff230e368f9af31a90a57564736f6c63430008090033";

export class AscensionStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _sToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AscensionStaking> {
    return super.deploy(
      _token,
      _sToken,
      overrides || {}
    ) as Promise<AscensionStaking>;
  }
  getDeployTransaction(
    _token: string,
    _sToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _sToken, overrides || {});
  }
  attach(address: string): AscensionStaking {
    return super.attach(address) as AscensionStaking;
  }
  connect(signer: Signer): AscensionStaking__factory {
    return super.connect(signer) as AscensionStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AscensionStakingInterface {
    return new utils.Interface(_abi) as AscensionStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AscensionStaking {
    return new Contract(address, _abi, signerOrProvider) as AscensionStaking;
  }
}
