/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20BatchSender,
  ERC20BatchSenderInterface,
} from "../ERC20BatchSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631239ec8c14610030575b600080fd5b61004361003e366004610236565b610045565b005b8281146100925760405162461bcd60e51b81526020600482015260166024820152750929c869ea4a48a86a84082a4a482b240988a9c8ea8960531b60448201526064015b60405180910390fd5b60005b838110156101c757856001600160a01b03166323b872dd338787858181106100bf576100bf6102b6565b90506020020160208101906100d491906102cc565b8686868181106100e6576100e66102b6565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401602060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017591906102ee565b6101b55760405162461bcd60e51b815260206004820152601160248201527010905510d20814d1539108119052531151607a1b6044820152606401610089565b806101bf81610310565b915050610095565b505050505050565b80356001600160a01b03811681146101e657600080fd5b919050565b60008083601f8401126101fd57600080fd5b5081356001600160401b0381111561021457600080fd5b6020830191508360208260051b850101111561022f57600080fd5b9250929050565b60008060008060006060868803121561024e57600080fd5b610257866101cf565b945060208601356001600160401b038082111561027357600080fd5b61027f89838a016101eb565b9096509450604088013591508082111561029857600080fd5b506102a5888289016101eb565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156102de57600080fd5b6102e7826101cf565b9392505050565b60006020828403121561030057600080fd5b815180151581146102e757600080fd5b600060001982141561033257634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205d12cc9285f1cf0c8ba94e4700906b34e1fb8a6df7c084ed703f42e9580bab0464736f6c63430008090033";

export class ERC20BatchSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20BatchSender> {
    return super.deploy(overrides || {}) as Promise<ERC20BatchSender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20BatchSender {
    return super.attach(address) as ERC20BatchSender;
  }
  connect(signer: Signer): ERC20BatchSender__factory {
    return super.connect(signer) as ERC20BatchSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BatchSenderInterface {
    return new utils.Interface(_abi) as ERC20BatchSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20BatchSender {
    return new Contract(address, _abi, signerOrProvider) as ERC20BatchSender;
  }
}
