/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20DistributorFacet,
  ERC20DistributorFacetInterface,
} from "../ERC20DistributorFacet";

const _abi = [
  {
    inputs: [],
    name: "POSITION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "hasWithdrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "newExcluded",
        type: "address[]",
      },
    ],
    name: "setExcluded",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setTokenDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100825760003560e01c80628f33d7146100875780631af6e864146100ad5780632e1a7d4d146100d0578063355ac596146100e55780633576f6cc146100fa578063853828b61461010d57806392030c8f14610115578063c126daa614610128578063c65c3d951461013b575b600080fd5b61009a610095366004610dd4565b610143565b6040519081526020015b60405180910390f35b6100c06100bb366004610e00565b6101a3565b60405190151581526020016100a4565b6100e36100de366004610e2a565b6101df565b005b61009a60008051602061105983398151915281565b6100e3610108366004610dd4565b6101ec565b6100e36101fa565b6100e3610123366004610e43565b61026e565b6100e3610136366004610e00565b61037e565b61009a610513565b60008061014e610528565b9050600061015c848661053a565b9050600061016986610683565b600087815260028501602052604081206001015491925090829061018e908590610ecd565b6101989190610eec565b979650505050505050565b6000806101ae610528565b6000938452600201602090815260408085206001600160a01b03969096168552600490950190525050205460ff1690565b6101e98133610701565b50565b6101f68282610701565b5050565b6000610204610528565b336000908152600382016020526040902054909150805b8260040154811015610269576000818152600284016020908152604080832033845260040190915290205460ff16610257576102578133610701565b8061026181610f0e565b91505061021b565b505050565b6102766108af565b6000610280610528565b905060005b81548110156102f75760008260010160008686858181106102a8576102a8610f29565b90506020020160208101906102bd9190610f3f565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806102ef81610f0e565b915050610285565b5060005b8281101561036c57600182600101600086868581811061031d5761031d610f29565b90506020020160208101906103329190610f3f565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061036481610f0e565b9150506102fb565b50610378818484610cf4565b50505050565b6103866108af565b6000610390610528565b6040516370a0823160e01b815230600482015290915082906001600160a01b038516906370a082319060240160206040518083038186803b1580156103d457600080fd5b505afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190610f5a565b101561048f5760405162461bcd60e51b815260206004820152604160248201527f45524332304469737472696275746f723a736574546f6b656e4469737472696260448201527f7574696f6e3a20496e73756666696369656e7420746f6b656e2062616c616e636064820152606560f81b608482015260a4015b60405180910390fd5b6004810180546000908152600283016020526040808220600101859055915481522080546001600160a01b0319166001600160a01b0385161790556104d2610938565b60048201546000908152600280840160205260409091206104f69290820191610d57565b5060048101805490600061050983610f0e565b9190505550505050565b60008061051e610528565b6004015492915050565b60008051602061105983398151915290565b600080610545610528565b60015460008581526002830160205260409081902060030154905163277166bf60e11b81529293506001600160a01b0390911691634ee2cd7e9161058e91889190600401610f73565b60206040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190610f5a565b6000805485825260028481016020526040928390200154915163277166bf60e11b81526001600160a01b0390911691634ee2cd7e91610621918991600401610f73565b60206040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190610f5a565b61067b9190610f8c565b949350505050565b60008061068e610528565b90506a0be951906eba2aa800000060005b82548110156106f9576106db8360000182815481106106c0576106c0610f29565b6000918252602090912001546001600160a01b03168661053a565b6106e59083610fa4565b9150806106f181610f0e565b91505061069f565b509392505050565b600061070b610528565b600084815260028201602090815260408083206001600160a01b038716845260040190915290205490915060ff16156107bc5760405162461bcd60e51b815260206004820152604760248201527f45524332304469737472696275746f723a5f77697468647261773a204163636f60448201527f756e742068617320616c72656164792077697468647261776e20746865697220606482015266746f6b656e732160c81b608482015260a401610486565b60006107c8838561053a565b905060006107d585610683565b60008681526002850160205260408120600101549192509082906107fa908590610ecd565b6108049190610eec565b600087815260028601602090815260408083206001600160a01b038a1684526004018252808320805460ff19166001179055600388019091529020549091508611610869576001600160a01b038516600090815260038501602052604090205461086b565b855b6001600160a01b03808716600090815260038701602090815260408083209490945589825260028801905291909120546108a791168683610a5e565b505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146109365760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610486565b565b610940610d85565b60405180604001604052806000800160009054906101000a90046001600160a01b03166001600160a01b0316639711715a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610f5a565b815260015460408051634b88b8ad60e11b815290516020938401936001600160a01b0390931692639711715a92600480820193918290030181600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190610f5a565b9052919050565b6102698363a9059cbb60e01b8484604051602401610a7d929190610f73565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000610b04826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b819092919063ffffffff16565b8051909150156102695780806020019051810190610b229190610fbb565b6102695760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610486565b6060610b908484600085610b9a565b90505b9392505050565b606082471015610bfb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610486565b6001600160a01b0385163b610c525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610486565b600080866001600160a01b03168587604051610c6e9190611009565b60006040518083038185875af1925050503d8060008114610cab576040519150601f19603f3d011682016040523d82523d6000602084013e610cb0565b606091505b509150915061019882828660608315610cca575081610b93565b825115610cda5782518084602001fd5b8160405162461bcd60e51b81526004016104869190611025565b828054828255906000526020600020908101928215610d47579160200282015b82811115610d475781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610d14565b50610d53929150610da3565b5090565b8260028101928215610d47579160200282015b82811115610d47578251825591602001919060010190610d6a565b60405180604001604052806002906020820280368337509192915050565b5b80821115610d535760008155600101610da4565b80356001600160a01b0381168114610dcf57600080fd5b919050565b60008060408385031215610de757600080fd5b82359150610df760208401610db8565b90509250929050565b60008060408385031215610e1357600080fd5b610e1c83610db8565b946020939093013593505050565b600060208284031215610e3c57600080fd5b5035919050565b60008060208385031215610e5657600080fd5b82356001600160401b0380821115610e6d57600080fd5b818501915085601f830112610e8157600080fd5b813581811115610e9057600080fd5b8660208260051b8501011115610ea557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ee757610ee7610eb7565b500290565b600082610f0957634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415610f2257610f22610eb7565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f5157600080fd5b610b9382610db8565b600060208284031215610f6c57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60008219821115610f9f57610f9f610eb7565b500190565b600082821015610fb657610fb6610eb7565b500390565b600060208284031215610fcd57600080fd5b81518015158114610b9357600080fd5b60005b83811015610ff8578181015183820152602001610fe0565b838111156103785750506000910152565b6000825161101b818460208701610fdd565b9190910192915050565b6020815260008251806020840152611044816040850160208701610fdd565b601f01601f1916919091016040019291505056fe0e6b1d0fb2408f41b7e81ef0487c262f883c2978d7bb92e4242ebf600ab59206a264697066735822122085d7fbb1e1c9f9cc5de727057d3fe40a13c5a42df9e30d79055cd4a807ab801164736f6c63430008090033";

export class ERC20DistributorFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20DistributorFacet> {
    return super.deploy(overrides || {}) as Promise<ERC20DistributorFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20DistributorFacet {
    return super.attach(address) as ERC20DistributorFacet;
  }
  connect(signer: Signer): ERC20DistributorFacet__factory {
    return super.connect(signer) as ERC20DistributorFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20DistributorFacetInterface {
    return new utils.Interface(_abi) as ERC20DistributorFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20DistributorFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20DistributorFacet;
  }
}
