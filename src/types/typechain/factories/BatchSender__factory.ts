/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchSender, BatchSenderInterface } from "../BatchSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "batchSendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610332806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631560c8ab14610030575b600080fd5b61004361003e3660046101f5565b610045565b005b82811461005157600080fd5b60005b8381101561018a57856001600160a01b03166323b872dd3387878581811061007e5761007e610277565b9050602002016020810190610093919061028d565b8686868181106100a5576100a5610277565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401602060405180830381600087803b1580156100fc57600080fd5b505af1158015610110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013491906102b1565b6101785760405162461bcd60e51b815260206004820152601160248201527010905510d20814d1539108119052531151607a1b604482015260640160405180910390fd5b80610182816102d3565b915050610054565b505050505050565b6001600160a01b03811681146101a757600080fd5b50565b60008083601f8401126101bc57600080fd5b5081356001600160401b038111156101d357600080fd5b6020830191508360208260051b85010111156101ee57600080fd5b9250929050565b60008060008060006060868803121561020d57600080fd5b853561021881610192565b945060208601356001600160401b038082111561023457600080fd5b61024089838a016101aa565b9096509450604088013591508082111561025957600080fd5b50610266888289016101aa565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561029f57600080fd5b81356102aa81610192565b9392505050565b6000602082840312156102c357600080fd5b815180151581146102aa57600080fd5b60006000198214156102f557634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212207bcc9c7001ea26ee78f11cec11d7a9a1c7fddf54e6a9be205f431c92e2c7463e64736f6c63430008090033";

export class BatchSender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchSender> {
    return super.deploy(overrides || {}) as Promise<BatchSender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchSender {
    return super.attach(address) as BatchSender;
  }
  connect(signer: Signer): BatchSender__factory {
    return super.connect(signer) as BatchSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchSenderInterface {
    return new utils.Interface(_abi) as BatchSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchSender {
    return new Contract(address, _abi, signerOrProvider) as BatchSender;
  }
}
