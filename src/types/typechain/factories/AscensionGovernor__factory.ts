/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AscensionGovernor,
  AscensionGovernorInterface,
} from "../AscensionGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20Votes",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20Votes",
        name: "_sToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sToken",
    outputs: [
      {
        internalType: "contract ERC20Votes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20Votes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620025be380380620025be8339810160408190526200003591620002e7565b600a826040518060400160405280601181526020017020b9b1b2b739b4b7b723b7bb32b93737b960791b81525080620000736200013c60201b60201c565b815160209283012081519183019190912060c082815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8189018190528183019790975260608101959095526080808601939093523085830152805180860390920182529390920190925280519084012090526101005281516200010d916000919084019062000224565b50506001600160a01b031661012052620001278162000157565b506001600160a01b031661014052506200035c565b6040805180820190915260018152603160f81b602082015290565b6064811115620001df5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40160405180910390fd5b600380549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b82805462000232906200031f565b90600052602060002090601f016020900481019282620002565760008555620002a1565b82601f106200027157805160ff1916838001178555620002a1565b82800160010185558215620002a1579182015b82811115620002a157825182559160200191906001019062000284565b50620002af929150620002b3565b5090565b5b80821115620002af5760008155600101620002b4565b80516001600160a01b0381168114620002e257600080fd5b919050565b60008060408385031215620002fb57600080fd5b6200030683620002ca565b91506200031660208401620002ca565b90509250929050565b600181811c908216806200033457607f821691505b602082108114156200035657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516121f2620003cc600039600081816103ac0152610c7b0152600081816104f501528181610d19015261120001526000611325015260006113740152600061134f015260006112d3015260006112fc01526121f26000f3fe6080604052600436106101265760003560e01c806301ffc9a71461012b57806302a251a31461016057806306f3f9e61461018057806306fdde03146101a25780632656227d146101c45780632d63f693146101d75780633932abb1146101f75780633bccf4fd1461020b5780633e4f49e61461022b5780634385963214610258578063544ffc9c146102a257806354fd4d50146102fc57806356781388146103265780637b3c71d3146103465780637d5e81e21461036657806397c3d334146103865780639ebdf12c1461039a578063a7713a70146103e6578063c01f9e37146103fb578063c59057e41461041b578063dd4e2ba51461043b578063deaaa7cc14610481578063eb9019d4146104a3578063f8ce560a146104c3578063fc0c546a146104e3575b600080fd5b34801561013757600080fd5b5061014b6101463660046117e1565b610517565b60405190151581526020015b60405180910390f35b34801561016c57600080fd5b5062093a805b604051908152602001610157565b34801561018c57600080fd5b506101a061019b36600461180b565b61054e565b005b3480156101ae57600080fd5b506101b76105a9565b6040516101579190611880565b6101726101d2366004611ad0565b61063b565b3480156101e357600080fd5b506101726101f236600461180b565b610748565b34801561020357600080fd5b506001610172565b34801561021757600080fd5b50610172610226366004611b70565b61077f565b34801561023757600080fd5b5061024b61024636600461180b565b610801565b6040516101579190611bd4565b34801561026457600080fd5b5061014b610273366004611bfc565b60008281526002602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156102ae57600080fd5b506102e16102bd36600461180b565b60008181526002602081905260409091208054600182015491909201549193909250565b60408051938452602084019290925290820152606001610157565b34801561030857600080fd5b506040805180820190915260018152603160f81b60208201526101b7565b34801561033257600080fd5b50610172610341366004611c28565b610965565b34801561035257600080fd5b50610172610361366004611c4b565b61098e565b34801561037257600080fd5b50610172610381366004611cd1565b6109e0565b34801561039257600080fd5b506064610172565b3480156103a657600080fd5b506103ce7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610157565b3480156103f257600080fd5b50600354610172565b34801561040757600080fd5b5061017261041636600461180b565b610bf8565b34801561042757600080fd5b50610172610436366004611ad0565b610c27565b34801561044757600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e908201526101b7565b34801561048d57600080fd5b5061017260008051602061217683398151915281565b3480156104af57600080fd5b506101726104be366004611d91565b610c61565b3480156104cf57600080fd5b506101726104de36600461180b565b610daa565b3480156104ef57600080fd5b506103ce7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663bf26d89760e01b148061054857506301ffc9a760e01b6001600160e01b03198316145b92915050565b33301461059d5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064015b60405180910390fd5b6105a681610db5565b50565b6060600080546105b890611dbb565b80601f01602080910402602001604051908101604052809291908181526020018280546105e490611dbb565b80156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b5050505050905090565b60008061064a86868686610c27565b9050600061065782610801565b9050600481600781111561066d5761066d611bbe565b148061068a5750600581600781111561068857610688611bbe565b145b6106e05760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610594565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a161073e8288888888610e7d565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60408051600080516020612176833981519152602082015290810186905260ff8516606082015260009081906107d9906107d19060800160405160208183030381529060405280519060200120610f7c565b868686610fca565b90506107f687828860405180602001604052806000815250610fe8565b979650505050505050565b6000818152600160208181526040808420815160a08101835281546001600160401b0390811660808301908152825283518086018552958301541685529283019390935260029092015460ff808216158015948401949094526101009091041615156060820152906108765750600792915050565b8060600151156108895750600292915050565b805151436001600160401b0390911611156108a75750600092915050565b602081015151436001600160401b0390911611156108c85750600192915050565b6108d581602001516110f3565b15610917576108e383611122565b8015610902575060008381526002602052604090208054600190910154115b61090d576003610910565b60045b9392505050565b60405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610594565b50919050565b60008033905061098684828560405180602001604052806000815250610fe8565b949350505050565b6000803390506109d686828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fe892505050565b9695505050505050565b6000806109f68686868680519060200120610c27565b90508451865114610a195760405162461bcd60e51b815260040161059490611df0565b8351865114610a3a5760405162461bcd60e51b815260040161059490611df0565b6000865111610a865760405162461bcd60e51b815260206004820152601860248201527711dbdd995c9b9bdc8e88195b5c1d1e481c1c9bdc1bdcd85b60421b6044820152606401610594565b600081815260016020908152604091829020825191820190925281546001600160401b03169081905215610b065760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610594565b6000610b12600161115a565b610b1b4361115a565b610b259190611e47565b90506000610b3562093a8061115a565b610b3f9083611e47565b9050610b4b83836111c6565b610b5860018401826111c6565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b03811115610b9657610b96611893565b604051908082528060200260200182016040528015610bc957816020015b6060815260200190600190039081610bb45790505b508c88888e604051610be399989796959493929190611f3b565b60405180910390a15091979650505050505050565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610770565b600084848484604051602001610c40949392919061202a565b60408051601f19818403018152919052805160209091012095945050505050565b604051630748d63560e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633a46b1a890610cb29086908690600401612075565b60206040518083038186803b158015610cca57600080fd5b505afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d02919061208e565b604051630748d63560e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633a46b1a890610d509087908790600401612075565b60206040518083038186803b158015610d6857600080fd5b505afa158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da0919061208e565b61091091906120a7565b6000610548826111e3565b6064811115610e385760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610594565b600380549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b600060405180606001604052806027815260200161219660279139905060005b8551811015610f7357600080878381518110610ebb57610ebb6120bf565b60200260200101516001600160a01b0316878481518110610ede57610ede6120bf565b6020026020010151878581518110610ef857610ef86120bf565b6020026020010151604051610f0d91906120d5565b60006040518083038185875af1925050503d8060008114610f4a576040519150601f19603f3d011682016040523d82523d6000602084013e610f4f565b606091505b5091509150610f5f828286611296565b50505080610f6c906120f1565b9050610e9d565b50505050505050565b6000610548610f896112cf565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610fdb878787876113c2565b9150915061073e816114a5565b600084815260016020819052604082209061100287610801565b600781111561101357611013611bbe565b1461106c5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610594565b604080516020810190915281546001600160401b031690819052600090611094908790610c61565b90506110a28787878461165b565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4888784886040516110e1949392919061210c565b60405180910390a29695505050505050565b600061110882516001600160401b0316151590565b801561054857505051436001600160401b03909116111590565b6000818152600260208190526040822090810154600182015461114591906120a7565b6111516104de85610748565b11159392505050565b60006001600160401b038211156111c25760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610594565b5090565b81546001600160401b0319166001600160401b0391909116179055565b60006064600354604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561124a57600080fd5b505afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611282919061208e565b61128c9190612134565b6105489190612153565b606083156112a5575081610910565b8251156112b55782518084602001fd5b8160405162461bcd60e51b81526004016105949190611880565b60007f000000000000000000000000000000000000000000000000000000000000000046141561131e57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156113ef575060009050600361149c565b8460ff16601b1415801561140757508460ff16601c14155b15611418575060009050600461149c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561146c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114955760006001925092505061149c565b9150600090505b94509492505050565b60008160048111156114b9576114b9611bbe565b14156114c25750565b60018160048111156114d6576114d6611bbe565b141561151f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610594565b600281600481111561153357611533611bbe565b14156115815760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610594565b600381600481111561159557611595611bbe565b14156115ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610594565b600481600481111561160257611602611bbe565b14156105a65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610594565b60008481526002602090815260408083206001600160a01b0387168452600381019092529091205460ff16156116e35760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608401610594565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff161415611734578181600001600082825461172991906120a7565b909155506117da9050565b60ff831660011415611754578181600101600082825461172991906120a7565b60ff831660021415611774578181600201600082825461172991906120a7565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610594565b5050505050565b6000602082840312156117f357600080fd5b81356001600160e01b03198116811461091057600080fd5b60006020828403121561181d57600080fd5b5035919050565b60005b8381101561183f578181015183820152602001611827565b8381111561184e576000848401525b50505050565b6000815180845261186c816020860160208601611824565b601f01601f19169290920160200192915050565b6020815260006109106020830184611854565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118d1576118d1611893565b604052919050565b60006001600160401b038211156118f2576118f2611893565b5060051b60200190565b80356001600160a01b038116811461191357600080fd5b919050565b600082601f83011261192957600080fd5b8135602061193e611939836118d9565b6118a9565b82815260059290921b8401810191818101908684111561195d57600080fd5b8286015b8481101561197f57611972816118fc565b8352918301918301611961565b509695505050505050565b600082601f83011261199b57600080fd5b813560206119ab611939836118d9565b82815260059290921b840181019181810190868411156119ca57600080fd5b8286015b8481101561197f57803583529183019183016119ce565b60006001600160401b038311156119fe576119fe611893565b611a11601f8401601f19166020016118a9565b9050828152838383011115611a2557600080fd5b828260208301376000602084830101529392505050565b600082601f830112611a4d57600080fd5b81356020611a5d611939836118d9565b82815260059290921b84018101918181019086841115611a7c57600080fd5b8286015b8481101561197f5780356001600160401b03811115611a9f5760008081fd5b8701603f81018913611ab15760008081fd5b611ac28986830135604084016119e5565b845250918301918301611a80565b60008060008060808587031215611ae657600080fd5b84356001600160401b0380821115611afd57600080fd5b611b0988838901611918565b95506020870135915080821115611b1f57600080fd5b611b2b8883890161198a565b94506040870135915080821115611b4157600080fd5b50611b4e87828801611a3c565b949793965093946060013593505050565b803560ff8116811461191357600080fd5b600080600080600060a08688031215611b8857600080fd5b85359450611b9860208701611b5f565b9350611ba660408701611b5f565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310611bf657634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215611c0f57600080fd5b82359150611c1f602084016118fc565b90509250929050565b60008060408385031215611c3b57600080fd5b82359150611c1f60208401611b5f565b60008060008060608587031215611c6157600080fd5b84359350611c7160208601611b5f565b925060408501356001600160401b0380821115611c8d57600080fd5b818701915087601f830112611ca157600080fd5b813581811115611cb057600080fd5b886020828501011115611cc257600080fd5b95989497505060200194505050565b60008060008060808587031215611ce757600080fd5b84356001600160401b0380821115611cfe57600080fd5b611d0a88838901611918565b95506020870135915080821115611d2057600080fd5b611d2c8883890161198a565b94506040870135915080821115611d4257600080fd5b611d4e88838901611a3c565b93506060870135915080821115611d6457600080fd5b508501601f81018713611d7657600080fd5b611d85878235602084016119e5565b91505092959194509250565b60008060408385031215611da457600080fd5b611dad836118fc565b946020939093013593505050565b600181811c90821680611dcf57607f821691505b6020821081141561095f57634e487b7160e01b600052602260045260246000fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03828116848216808303821115611e6957611e69611e31565b01949350505050565b600081518084526020808501945080840160005b83811015611eab5781516001600160a01b031687529582019590820190600101611e86565b509495945050505050565b600081518084526020808501945080840160005b83811015611eab57815187529582019590820190600101611eca565b600081518084526020808501808196508360051b8101915082860160005b85811015611f2e578284038952611f1c848351611854565b98850198935090840190600101611f04565b5091979650505050505050565b60006101208b8352602060018060a01b038c1681850152816040850152611f648285018c611e72565b91508382036060850152611f78828b611eb6565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015611fc957601f19878403018552611fb7838351611854565b94860194925090850190600101611f9b565b505086810360a0880152611fdd818c611ee6565b945050505050611ff860c08401876001600160401b03169052565b6001600160401b03851660e084015282810361010084015261201a8185611854565b9c9b505050505050505050505050565b60808152600061203d6080830187611e72565b828103602084015261204f8187611eb6565b905082810360408401526120638186611ee6565b91505082606083015295945050505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156120a057600080fd5b5051919050565b600082198211156120ba576120ba611e31565b500190565b634e487b7160e01b600052603260045260246000fd5b600082516120e7818460208701611824565b9190910192915050565b600060001982141561210557612105611e31565b5060010190565b84815260ff841660208201528260408201526080606082015260006109d66080830184611854565b600081600019048311821515161561214e5761214e611e31565b500290565b60008261217057634e487b7160e01b600052601260045260246000fd5b50049056fe150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a26469706673582212202f303ca3f4086459c64392f0b0164b3d78fe57e55ff0ba279c4f51f1e39059eb64736f6c63430008090033";

export class AscensionGovernor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _sToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AscensionGovernor> {
    return super.deploy(
      _token,
      _sToken,
      overrides || {}
    ) as Promise<AscensionGovernor>;
  }
  getDeployTransaction(
    _token: string,
    _sToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _sToken, overrides || {});
  }
  attach(address: string): AscensionGovernor {
    return super.attach(address) as AscensionGovernor;
  }
  connect(signer: Signer): AscensionGovernor__factory {
    return super.connect(signer) as AscensionGovernor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AscensionGovernorInterface {
    return new utils.Interface(_abi) as AscensionGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AscensionGovernor {
    return new Contract(address, _abi, signerOrProvider) as AscensionGovernor;
  }
}
