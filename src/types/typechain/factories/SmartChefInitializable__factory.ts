/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SmartChefInitializable,
  SmartChefInitializableInterface,
} from "../SmartChefInitializable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenRecovered",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AdminTokenRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerBlock",
        type: "uint256",
      },
    ],
    name: "NewRewardPerBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "NewStartAndEndBlocks",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RewardsStop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "accTokenPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyRewardWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRewardBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLimitPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precisionFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverWrongTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
    ],
    name: "updateRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
    ],
    name: "updateStartAndEndBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016065556115ad806100256000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806380dc0672116100c3578063a9f8d1811161007c578063a9f8d1811461029d578063b6b55f25146102a6578063db2e21bc146102b9578063f2fde38b146102c1578063f40f0f52146102d4578063fc0c546a146102e757600080fd5b806380dc0672146102425780638ae39cac1461024a5780638da5cb5b146102535780638f662915146102785780639513997f146102815780639d902fc01461029457600080fd5b8063392e53cd11610115578063392e53cd146101e55780633f138d4b1461020257806348cd4cb1146102155780634ec81af11461021e57806366fe9f8a14610231578063715018a61461023a57600080fd5b806301f8a976146101525780631959a002146101675780631aed6553146101a85780632e1a7d4d146101bf5780633279beab146101d2575b600080fd5b610165610160366004611293565b6102fa565b005b61018e6101753660046111ed565b606f602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b6101b160685481565b60405190815260200161019f565b6101656101cd366004611293565b6103ac565b6101656101e0366004611293565b610517565b6066546101f29060ff1681565b604051901515815260200161019f565b61016561021036600461120a565b61055b565b6101b160695481565b61016561022c366004611258565b61068e565b6101b1606b5481565b6101656107f7565b61016561082d565b6101b1606c5481565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161019f565b6101b160675481565b61016561028f3660046112c5565b61085d565b6101b1606d5481565b6101b1606a5481565b6101656102b4366004611293565b6109de565b610165610b02565b6101656102cf3660046111ed565b610b98565b6101b16102e23660046111ed565b610c30565b606e54610260906001600160a01b031681565b6033546001600160a01b0316331461032d5760405162461bcd60e51b815260040161032490611359565b60405180910390fd5b60695443106103715760405162461bcd60e51b815260206004820152601060248201526f141bdbdb081a185cc81cdd185c9d195960821b6044820152606401610324565b606c8190556040518181527f0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df9060200160405180910390a150565b600260655414156103cf5760405162461bcd60e51b81526004016103249061138e565b6002606555336000908152606f6020526040902080548211156104345760405162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420746f20776974686472617720746f6f206869676800000000006044820152606401610324565b61043c610d8f565b60008160010154606d54606754846000015461045891906114ea565b61046291906113dd565b61046c9190611509565b9050821561049a578154610481908490611509565b8255606e5461049a906001600160a01b03163385610e78565b80156104b757606e546104b7906001600160a01b03163383610e78565b606d5460675483546104c991906114ea565b6104d391906113dd565b600183015560405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050600160655550565b6033546001600160a01b031633146105415760405162461bcd60e51b815260040161032490611359565b606e54610558906001600160a01b03163383610e78565b50565b6033546001600160a01b031633146105855760405162461bcd60e51b815260040161032490611359565b606e546001600160a01b03838116911614156105dc5760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1031329039ba30b5b2b2103a37b5b2b760511b6044820152606401610324565b606e546001600160a01b03838116911614156106335760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba103132903932bbb0b932103a37b5b2b760511b6044820152606401610324565b6106476001600160a01b0383163383610e78565b604080516001600160a01b0384168152602081018390527f74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab7812991015b60405180910390a15050565b60665460ff16156106d75760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610324565b6066805460ff19166001179055606e80546001600160a01b0386166001600160a01b03199091168117909155606c849055606983905560688290556040805163313ce56760e01b815290516000929163313ce567916004828101926020929190829003018186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078391906112e7565b60ff169050601e81106107d15760405162461bcd60e51b815260206004820152601660248201527504d75737420626520696e666572696f7220746f2033360541b6044820152606401610324565b6107dc81601e611509565b6107e790600a611442565b606d555050606954606a55505050565b6033546001600160a01b031633146108215760405162461bcd60e51b815260040161032490611359565b61082b6000610ee0565b565b6033546001600160a01b031633146108575760405162461bcd60e51b815260040161032490611359565b43606855565b6033546001600160a01b031633146108875760405162461bcd60e51b815260040161032490611359565b60695443106108cb5760405162461bcd60e51b815260206004820152601060248201526f141bdbdb081a185cc81cdd185c9d195960821b6044820152606401610324565b8082106109315760405162461bcd60e51b815260206004820152602e60248201527f4e6577207374617274426c6f636b206d757374206265206c6f7765722074686160448201526d6e206e657720656e64426c6f636b60901b6064820152608401610324565b8143106109995760405162461bcd60e51b815260206004820152603060248201527f4e6577207374617274426c6f636b206d7573742062652068696768657220746860448201526f616e2063757272656e7420626c6f636b60801b6064820152608401610324565b60698290556068819055606a82905560408051838152602081018390527f7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce069101610682565b60026065541415610a015760405162461bcd60e51b81526004016103249061138e565b6002606555336000908152606f60205260409020610a1d610d8f565b805415610a755760008160010154606d546067548460000154610a4091906114ea565b610a4a91906113dd565b610a549190611509565b90508015610a7357606e54610a73906001600160a01b03163383610e78565b505b8115610aa2578054610a889083906113c5565b8155606e54610aa2906001600160a01b0316333085610f32565b606d546067548254610ab491906114ea565b610abe91906113dd565b600182015560405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250506001606555565b60026065541415610b255760405162461bcd60e51b81526004016103249061138e565b6002606555336000908152606f6020526040812080548282556001820192909255908015610b6457606e54610b64906001600160a01b03163383610e78565b815460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969590602001610af1565b6033546001600160a01b03163314610bc25760405162461bcd60e51b815260040161032490611359565b6001600160a01b038116610c275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610324565b61055881610ee0565b6001600160a01b038181166000908152606f6020526040808220606e5491516370a0823160e01b8152306004820152929390928492909116906370a082319060240160206040518083038186803b158015610c8a57600080fd5b505afa158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc291906112ac565b9050606a5443118015610cd457508015155b15610d5c576000610ce7606a5443610f70565b90506000606c5482610cf991906114ea565b9050600083606d5483610d0c91906114ea565b610d1691906113dd565b606754610d2391906113c5565b90508460010154606d54828760000154610d3d91906114ea565b610d4791906113dd565b610d519190611509565b979650505050505050565b6001820154606d546067548454610d7391906114ea565b610d7d91906113dd565b610d879190611509565b949350505050565b606a544311610d9a57565b606e546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610dde57600080fd5b505afa158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1691906112ac565b905080610e24575043606a55565b6000610e32606a5443610f70565b90506000606c5482610e4491906114ea565b905082606d5482610e5591906114ea565b610e5f91906113dd565b606754610e6c91906113c5565b606755505043606a5550565b6040516001600160a01b038316602482015260448101829052610edb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610fb1565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610f6a9085906323b872dd60e01b90608401610ea4565b50505050565b60006068548211610f8c57610f858383611509565b9050610fab565b6068548310610f9d57506000610fab565b82606854610f859190611509565b92915050565b6000611006826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110839092919063ffffffff16565b805190915015610edb57808060200190518101906110249190611236565b610edb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610324565b6060611092848460008561109c565b90505b9392505050565b6060824710156110fd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610324565b843b61114b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610324565b600080866001600160a01b03168587604051611167919061130a565b60006040518083038185875af1925050503d80600081146111a4576040519150601f19603f3d011682016040523d82523d6000602084013e6111a9565b606091505b5091509150610d51828286606083156111c3575081611095565b8251156111d35782518084602001fd5b8160405162461bcd60e51b81526004016103249190611326565b6000602082840312156111ff57600080fd5b813561109581611562565b6000806040838503121561121d57600080fd5b823561122881611562565b946020939093013593505050565b60006020828403121561124857600080fd5b8151801515811461109557600080fd5b6000806000806080858703121561126e57600080fd5b843561127981611562565b966020860135965060408601359560600135945092505050565b6000602082840312156112a557600080fd5b5035919050565b6000602082840312156112be57600080fd5b5051919050565b600080604083850312156112d857600080fd5b50508035926020909101359150565b6000602082840312156112f957600080fd5b815160ff8116811461109557600080fd5b6000825161131c818460208701611520565b9190910192915050565b6020815260008251806020840152611345816040850160208701611520565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156113d8576113d861154c565b500190565b6000826113fa57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561143a5781600019048211156114205761142061154c565b8085161561142d57918102915b93841c9390800290611404565b509250929050565b6000611095838360008261145857506001610fab565b8161146557506000610fab565b816001811461147b5760028114611485576114a1565b6001915050610fab565b60ff8411156114965761149661154c565b50506001821b610fab565b5060208310610133831016604e8410600b84101617156114c4575081810a610fab565b6114ce83836113ff565b80600019048211156114e2576114e261154c565b029392505050565b60008160001904831182151516156115045761150461154c565b500290565b60008282101561151b5761151b61154c565b500390565b60005b8381101561153b578181015183820152602001611523565b83811115610f6a5750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461055857600080fdfea264697066735822122095bfcab1efdda65c1057b48eef88f18626dbe9d7d05af47aeaf24616ff76e35f64736f6c63430008070033";

export class SmartChefInitializable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmartChefInitializable> {
    return super.deploy(overrides || {}) as Promise<SmartChefInitializable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SmartChefInitializable {
    return super.attach(address) as SmartChefInitializable;
  }
  connect(signer: Signer): SmartChefInitializable__factory {
    return super.connect(signer) as SmartChefInitializable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartChefInitializableInterface {
    return new utils.Interface(_abi) as SmartChefInitializableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartChefInitializable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SmartChefInitializable;
  }
}
