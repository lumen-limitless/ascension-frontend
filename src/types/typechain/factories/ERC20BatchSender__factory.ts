/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20BatchSender,
  ERC20BatchSenderInterface,
} from "../ERC20BatchSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "sendERC20MultiValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "sendERC20SingleValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161098b38038061098b83398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c6108ed61009e6000396000818160730152818160d0015261028b01526108ed6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634dcbc45c146100465780639a5ec3fa1461005b578063fc0c546a1461006e575b600080fd5b6100596100543660046106ed565b6100b1565b005b610059610069366004610770565b61026c565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6040516370a0823160e01b8152336004820152670de0b6b3a7640000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015291906107cc565b101561019a5760405162461bcd60e51b81526020600482015260126024820152715265717569726573203120415343454e442160701b60448201526064015b60405180910390fd5b8281146101e95760405162461bcd60e51b815260206004820152601b60248201527f4172726179206c656e6774687320646f206e6f74206d617463682100000000006044820152606401610191565b60005b83811015610264576102523386868481811061020a5761020a610889565b905060200201602081019061021f91906106ae565b85858581811061023157610231610889565b90506020020135896001600160a01b03166103b1909392919063ffffffff16565b8061025c81610860565b9150506101ec565b505050505050565b6040516370a0823160e01b8152336004820152670de0b6b3a7640000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d91906107cc565b10156103505760405162461bcd60e51b81526020600482015260126024820152715265717569726573203120415343454e442160701b6044820152606401610191565b60005b828110156103aa576103983385858481811061037157610371610889565b905060200201602081019061038691906106ae565b6001600160a01b0388169190856103b1565b806103a281610860565b915050610353565b5050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261040b908590610411565b50505050565b6000610466826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104e89092919063ffffffff16565b8051909150156104e3578080602001905181019061048491906106cb565b6104e35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610191565b505050565b60606104f78484600085610501565b90505b9392505050565b6060824710156105625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610191565b843b6105b05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610191565b600080866001600160a01b031685876040516105cc91906107e5565b60006040518083038185875af1925050503d8060008114610609576040519150601f19603f3d011682016040523d82523d6000602084013e61060e565b606091505b509150915061061e828286610629565b979650505050505050565b606083156106385750816104fa565b8251156106485782518084602001fd5b8160405162461bcd60e51b81526004016101919190610801565b60008083601f84011261067457600080fd5b50813567ffffffffffffffff81111561068c57600080fd5b6020830191508360208260051b85010111156106a757600080fd5b9250929050565b6000602082840312156106c057600080fd5b81356104fa8161089f565b6000602082840312156106dd57600080fd5b815180151581146104fa57600080fd5b60008060008060006060868803121561070557600080fd5b85356107108161089f565b9450602086013567ffffffffffffffff8082111561072d57600080fd5b61073989838a01610662565b9096509450604088013591508082111561075257600080fd5b5061075f88828901610662565b969995985093965092949392505050565b6000806000806060858703121561078657600080fd5b84356107918161089f565b9350602085013567ffffffffffffffff8111156107ad57600080fd5b6107b987828801610662565b9598909750949560400135949350505050565b6000602082840312156107de57600080fd5b5051919050565b600082516107f7818460208701610834565b9190910192915050565b6020815260008251806020840152610820816040850160208701610834565b601f01601f19169190910160400192915050565b60005b8381101561084f578181015183820152602001610837565b8381111561040b5750506000910152565b600060001982141561088257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146108b457600080fd5b5056fea26469706673582212201239ec3075b3d43562cc7028696d3939f032db784620325195f974f32750b80364736f6c63430008070033";

export class ERC20BatchSender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20BatchSender> {
    return super.deploy(_token, overrides || {}) as Promise<ERC20BatchSender>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): ERC20BatchSender {
    return super.attach(address) as ERC20BatchSender;
  }
  connect(signer: Signer): ERC20BatchSender__factory {
    return super.connect(signer) as ERC20BatchSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BatchSenderInterface {
    return new utils.Interface(_abi) as ERC20BatchSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20BatchSender {
    return new Contract(address, _abi, signerOrProvider) as ERC20BatchSender;
  }
}
